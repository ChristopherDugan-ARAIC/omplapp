language: cpp

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      compiler: gcc
      env: PYTHONPATH=/usr/local/lib/python2.7/dist-packages PATH=${PATH}:${HOME}/castxml/bin JOBS=4 TEST_EXCLUDE='test_machine_spec'
      addons:
        apt:
          packages:
            - libboost1.55-all-dev
            - python-dev
            - libode-dev
            - libeigen3-dev
            - python-pip
            - freeglut3-dev
            - libassimp-dev
      cache:
        apt: true
        directories:
          - ${HOME}/castxml
          - /usr/local
    - os: osx
      osx_image: xcode9.1
      compiler: clang
      env: JOBS=2 TEST_EXCLUDE='test_(machine_specs|random)'
      cache:
        directories:
          - /usr/local

install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      brew tap homebrew/science;
      brew update;
      brew install https://raw.github.com/dartsim/homebrew-dart/master/Formula/fcl.rb;
      brew install boost-python ode eigen assimp castxml;
    else
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
      sudo apt-get -y update;
      sudo apt-get -y install g++-5;
      export CXX=g++-5;
      if [ ! -e /usr/local/lib/libfcl.so ]; then
        wget -O - https://github.com/danfis/libccd/archive/v2.0.tar.gz | tar zxf - ;
        cd libccd-2.0;
        cmake .;
        sudo make install;
        cd ..;
        wget -O - https://github.com/flexible-collision-library/fcl/archive/0.5.0.tar.gz | tar zxf - ;
        cd fcl-0.5.0;
        cmake .;
        sudo make install;
        cd ..;
      fi;
      if [ ! -e ${HOME}/castxml ]; then
        wget -O - https://midas3.kitware.com/midas/download/item/318227/castxml-linux.tar.gz | tar zxf - -C ${HOME};
      fi;
    fi
  - sudo -H pip -v install pygccxml https://bitbucket.org/ompl/pyplusplus/get/1.8.0.tar.gz

script:
  # get OMPL subrepository
  - git clone --depth=1 --branch=master git://github.com/ompl/ompl.git

  # Create build directory
  - mkdir -p build
  - cd build

  # Configure
  - cmake -DOMPL_REGISTRATION=OFF -DCMAKE_INSTALL_PREFIX=tmp ..

  # TIMES OUT BECAUSE IT DOES NOT PRODUCE OUTPUT FOR MORE THAN 10 MINUTES
  # generate python bindings
  #- make -j4 update_bindings

  # Build
  - make -j $JOBS

  # Run unit tests
  - ctest -E "$TEST_EXCLUDE";
